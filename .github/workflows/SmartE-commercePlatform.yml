name: Build and Deploy .NET Core Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: SmartE-commercePlatform
  AZURE_WEBAPP_PACKAGE_PATH: SmartE-commercePlatform/publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: DefaultResourceGroup-DEWC
  AZURE_APIM_SERVICENAME: SmartE-commercePlatformapi
  AZURE_APIM_API_ID: SmartE-commercePlatform
  AZURE_APIM_APPSERVICEURL: https://smarte-commerceplatform.azurewebsites.net
  SWASHBULCKLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.0.0
  API_IMPORT_DLL: SmartE-commercePlatform/bin/Release/net8.0/SmartE-commercePlatform.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: Backend/SmartE-commercePlatform.sln
  SONAR_PROJECT_KEY: SmartE-commercePlatform-Backend
  SONAR_ORGANIZATION: dmg0411

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Shallow clones should be disabled for a better relevancy of analysis
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu'

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Install SonarQube Scanner
      run: |
        dotnet tool install --global dotnet-sonarscanner

    - name: Restore dependencies
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}

    - name: Begin SonarQube Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin \
          /k:"DMG0411_SmartE-CommercePlatform" \
          /o:"dmg0411" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
          /d:sonar.coverage.exclusions="**/*Tests*/**,**/Program.cs,**/Startup.cs"

    - name: Build the project
      run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Run tests with coverage
      run: |
        dotnet test ${{ env.WORKING_DIRECTORY }} \
          --configuration ${{ env.CONFIGURATION }} \
          --collect:"XPlat Code Coverage" \
          --logger trx \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

    - name: Debug file paths
      run: ls -R

    - name: Complete SonarQube Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    - name: Publish application
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-analyze
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.SmartE_commercePlatform_C7C9 }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.SmartE_commercePlatformapi_SPN }}

    - name: Create API in Azure API Management
      run: |
        az apim api create \
          --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" \
          --service-name "${{ env.AZURE_APIM_SERVICENAME }}" \
          --api-id "${{ env.AZURE_APIM_API_ID }}" \
          --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" \
          --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" \
          --display-name "SmartE-commercePlatform API" \
          --description "API for SmartE-commercePlatform" \
          --protocols "https"

    - name: Logout from Azure
      run: az logout
