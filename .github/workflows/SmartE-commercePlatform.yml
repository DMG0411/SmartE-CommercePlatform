name: Build and deploy .NET Core application to Web App SmartE-commercePlatform with API Management Service SmartE-commercePlatformapi-SmartE-commercePlatform

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: SmartE-commercePlatform
  AZURE_WEBAPP_PACKAGE_PATH: SmartE-commercePlatform/publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: DefaultResourceGroup-DEWC
  AZURE_APIM_SERVICENAME: SmartE-commercePlatformapi
  AZURE_APIM_API_ID: SmartE-commercePlatform
  AZURE_APIM_APPSERVICEURL: https://smarte-commerceplatform.azurewebsites.net
  SWASHBULCKLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.0.0
  API_IMPORT_DLL: SmartE-commercePlatform/bin/Release/net8.0/SmartE-commercePlatform.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: Backend/SmartE-commercePlatform.sln

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}

    - name: Run tests with coverage
      run: | 
        dotnet test Backend/UnitTests/UnitTests.csproj \
        --no-build \
        --collect:"XPlat Code Coverage" \
        --results-directory ./TestResults

    - name: Convert coverage report to opencover format
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator \
        -reports:"./TestResults/**/*.trx;./TestResults/**/*.coverage" \
        -targetdir:"./CoverageReports" \
        -reporttypes:opencover

    - name: Run SonarQube Analysis
      run: |
        dotnet-sonarscanner begin \
          /k:"SmartEcommercePlatform-Backend" \
          /d:sonar.host.url="http://<SONARQUBE_SERVER>" \
          /d:sonar.login="<SONARQUBE_TOKEN>" \
          /d:sonar.cs.opencover.reportsPaths="./CoverageReports/opencover.xml"

        dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }}
        
        dotnet-sonarscanner end \
          /d:sonar.login="<SONARQUBE_TOKEN>"

    - name: Publish application
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.SmartE_commercePlatform_C7C9 }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.SmartE_commercePlatformapi_SPN }}

    - name: Create API in Azure API Management
      run: |
        az apim api create \
          --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" \
          --service-name "${{ env.AZURE_APIM_SERVICENAME }}" \
          --api-id "${{ env.AZURE_APIM_API_ID }}" \
          --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" \
          --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" \
          --display-name "SmartE-commercePlatform API" \
          --description "API for SmartE-commercePlatform" \
          --protocols "https"

    - name: Logout from Azure
      run: az logout
